{
  "$id": "verge://registry-config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Registry",
  "description": "Configure registry using the following options. Registry will always be sent to stdout and stderr.",
  "type": "object",
  "definitions": {
    "$schema": {
      "type": "string",
      "format": "uri-reference",
      "description": "Add this to allow defining the schema, useful for IDE integration"
    },
    "tlsxSource": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "path": {
          "title": "Path to PEM-encoded Fle",
          "type": "string",
          "examples": ["path/to/file.pem"]
        },
        "base64": {
          "title": "Base64 Encoded Inline",
          "description": "The base64 string of the PEM-encoded file content. Can be generated using for example `base64 -i path/to/file.pem`.",
          "type": "string",
          "examples": [
            "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXG5NSUlEWlRDQ0FrMmdBd0lCQWdJRVY1eE90REFOQmdr..."
          ]
        }
      }
    },
    "tlsx": {
      "title": "HTTPS",
      "description": "Configure HTTP over TLS (HTTPS). All options can also be set using environment variables by replacing dots (`.`) with underscores (`_`) and uppercasing the key. For example, `some.prefix.tls.key.path` becomes `export SOME_PREFIX_TLS_KEY_PATH`. If all keys are left undefined, TLS will be disabled.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "key": {
          "title": "Private Key (PEM)",
          "allOf": [
            {
              "$ref": "#/definitions/tlsxSource"
            }
          ]
        },
        "cert": {
          "title": "TLS Certificate (PEM)",
          "allOf": [
            {
              "$ref": "#/definitions/tlsxSource"
            }
          ]
        }
      }
    },
    "cors": {
      "title": "Cross Origin Resource Sharing (CORS)",
      "description": "Configure [Cross Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/) using the following options.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "title": "Enable CORS",
          "description": "If set to true, CORS will be enabled and preflight-requests (OPTION) will be answered."
        },
        "allowed_origins": {
          "title": "Allowed Origins",
          "description": "A list of origins a cross-domain request can be executed from. If the special * value is present in the list, all origins will be allowed. An origin may contain a wildcard (*) to replace 0 or more characters (i.e.: http://*.domain.com). Usage of wildcards implies a small performance penality. Only one wildcard can be used per origin.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "default": ["*"],
          "uniqueItems": true,
          "examples": [
            [
              "https://example.com",
              "https://*.example.com",
              "https://*.foo.example.com"
            ]
          ]
        },
        "allowed_methods": {
          "type": "array",
          "title": "Allowed HTTP Methods",
          "description": "A list of methods the client is allowed to use with cross-domain requests.",
          "items": {
            "type": "string",
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "DELETE",
              "CONNECT",
              "TRACE",
              "PATCH"
            ]
          },
          "uniqueItems": true,
          "default": ["GET", "POST", "PUT", "PATCH", "DELETE"]
        },
        "allowed_headers": {
          "description": "A list of non simple headers the client is allowed to use with cross-domain requests.",
          "title": "Allowed Request HTTP Headers",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minLength": 1,
          "uniqueItems": true,
          "default": ["Authorization", "Content-Type"]
        },
        "exposed_headers": {
          "description": "Indicates which headers are safe to expose to the API of a CORS API specification",
          "title": "Allowed Response HTTP Headers",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minLength": 1,
          "uniqueItems": true,
          "default": ["Content-Type"]
        },
        "allow_credentials": {
          "type": "boolean",
          "title": "Allow HTTP Credentials",
          "default": false,
          "description": "Indicates whether the request can include user credentials like cookies, HTTP authentication or client side SSL certificates."
        },
        "max_age": {
          "type": "integer",
          "default": 0,
          "title": "Maximum Age",
          "description": "Indicates how long (in seconds) the results of a preflight request can be cached. The default is 0 which stands for no max age."
        },
        "debug": {
          "type": "boolean",
          "default": false,
          "title": "Enable Debugging",
          "description": "Set to true to debug server side CORS issues."
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "level": {
      "title": "Level",
      "description": "The level of log entries to show. Debug enables stack traces on errors.",
      "type": "string",
      "default": "info",
      "enum": ["panic", "fatal", "error", "warn", "info", "debug", "trace"]
    },
    "serve": {
      "type": "object",
      "title": "API Server",
      "additionalProperties": true,
      "properties": {
        "port": {
          "type": "integer",
          "default": 8000,
          "title": "Port",
          "description": "The port to listen on.",
          "minimum": 0,
          "maximum": 65535
        },
        "host":{
          "type": "string",
          "default": "",
          "examples": ["localhost", "127.0.0.1"],
          "description": "The network interface to listen on."
        },
        "cors": {
          "$ref": "#/definitions/cors"
        },
        "tls": {
          "$ref": "#/definitions/tlsx"
        }
      }
    }
  },
  "additionalProperties": false
}